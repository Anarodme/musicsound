{"ast":null,"code":"import { ModalPlaylistsComponent } from './modal-playlists/modal-playlists.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../Services/player-control/media.service\";\nimport * as i3 from \"src/app/Services/Album/album.service\";\nimport * as i4 from \"src/app/Services/Favorites/favorites.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/common\";\nfunction SongsComponent_div_1_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No artist details available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SongsComponent_div_1_div_13_div_13_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nfunction SongsComponent_div_1_div_13_div_13_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n}\nfunction SongsComponent_div_1_div_13_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function SongsComponent_div_1_div_13_div_13_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const song_r6 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r10.playSong(song_r6));\n    });\n    i0.ɵɵelement(4, \"span\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 13);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 13);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function SongsComponent_div_1_div_13_div_13_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const song_r6 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.toggleFavorite(song_r6));\n    });\n    i0.ɵɵtemplate(13, SongsComponent_div_1_div_13_div_13_span_13_Template, 1, 0, \"span\", 21);\n    i0.ɵɵtemplate(14, SongsComponent_div_1_div_13_div_13_span_14_Template, 1, 0, \"span\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function SongsComponent_div_1_div_13_div_13_Template_a_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const song_r6 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.modalPlaylist(song_r6));\n    });\n    i0.ɵɵelement(17, \"span\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r7 + 1, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(song_r6.songTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r6.album.artist.artistName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r6.duration.slice(3, 8));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", song_r6.favorite);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !song_r6.favorite);\n  }\n}\nfunction SongsComponent_div_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"div\", 13);\n    i0.ɵɵtext(3, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5, \"T\\u00EDtulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 13);\n    i0.ɵɵtext(7, \"Artista\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 13);\n    i0.ɵɵtext(9, \"Duraci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 13);\n    i0.ɵɵelement(11, \"i\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, SongsComponent_div_1_div_13_div_13_Template, 18, 6, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.albums.songs);\n  }\n}\nfunction SongsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"section\", 4)(2, \"header\", 5);\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"h4\");\n    i0.ɵɵtext(6, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, SongsComponent_div_1_ng_template_11_Template, 2, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, SongsComponent_div_1_div_13_Template, 14, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.albums.songs[0] == null ? null : ctx_r0.albums.songs[0].album.coverImage, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.albums.songs[0] == null ? null : ctx_r0.albums.songs[0].album.albumTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.albums.songs[0] == null ? null : ctx_r0.albums.songs[0].album.albumTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r0.albums.songs[0] == null ? null : ctx_r0.albums.songs[0].album.artist == null ? null : ctx_r0.albums.songs[0].album.artist.artistName, \", \", ctx_r0.albums.songs[0] == null ? null : ctx_r0.albums.songs[0].album.releaseDate.slice(0, 4), \", \", ctx_r0.albums.songs.length, \" songs \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.albums.songs && ctx_r0.albums.songs.length > 0);\n  }\n}\nfunction SongsComponent_app_player_controls_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-player-controls\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectedSong\", ctx_r1.selectedSong)(\"songs\", ctx_r1.albums.songs)(\"showControls\", ctx_r1.showPlayerControls)(\"mediaType\", \"audio\");\n  }\n}\nexport class SongsComponent {\n  constructor(route, mediaService, albumService, FavoritesService, dialog) {\n    this.route = route;\n    this.mediaService = mediaService;\n    this.albumService = albumService;\n    this.FavoritesService = FavoritesService;\n    this.dialog = dialog;\n    this.selectedSong = null;\n    this.currentSongIndex = -1;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.album_Id = +params.get('albumId');\n      if (this.album_Id) {\n        this.fetchAlbums(this.album_Id);\n      }\n    });\n    this.mediaService.currentSong$.subscribe(song => {\n      this.selectedSong = song;\n    });\n  }\n  fetchAlbums(album_Id) {\n    this.albumService.getSongOfAlbum(album_Id).subscribe(data => {\n      this.albums = {\n        songs: data.map(song => ({\n          id: song.id,\n          songTitle: song.songTitle,\n          audio: song.audio,\n          duration: song.duration,\n          album: {\n            id: song.album.id,\n            albumTitle: song.album.albumTitle,\n            releaseDate: song.album.releaseDate,\n            coverImage: song.album.coverImage,\n            artist: {\n              id: song.album.artist.id,\n              artistName: song.album.artist.artistName,\n              description: song.album.artist.description\n            }\n          }\n        }))\n      };\n      console.log('Playlist:', this.playlist);\n    }, error => {\n      console.error('Error fetching playlist:', error);\n    });\n  }\n  // Toggles the favorite status of a song\n  toggleFavorite(song) {\n    // Toggle the favorite status of the song\n    song.favorite = !song.favorite;\n    // If the song is marked as favorite, add it to the liked songs\n    if (song.favorite) {\n      const songId = song.id;\n      this.FavoritesService.addToLikedSongs(songId);\n      console.log(songId);\n    }\n  }\n  playSong(song) {\n    try {\n      console.log('Canción seleccionada para reproducir:', song);\n      this.mediaService.setCurrentSong({\n        ...song,\n        songs: this.albums.songs\n      });\n      this.selectedSong = {\n        ...song,\n        songs: this.albums.songs\n      };\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  }\n  // Opens the modal dialog for selecting a playlist\n  modalPlaylist(selectedSong) {\n    // Open the modal dialog with the selected song data\n    const dialogRef = this.dialog.open(ModalPlaylistsComponent, {\n      data: {\n        selectedSong\n      }\n    });\n    // Subscribe to the dialog close event\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n  static #_ = this.ɵfac = function SongsComponent_Factory(t) {\n    return new (t || SongsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MediaService), i0.ɵɵdirectiveInject(i3.AlbumService), i0.ɵɵdirectiveInject(i4.FavoritesService), i0.ɵɵdirectiveInject(i5.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SongsComponent,\n    selectors: [[\"app-songs\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"content\"], [\"class\", \"container\", 4, \"ngIf\"], [3, \"selectedSong\", \"songs\", \"showControls\", \"mediaType\", 4, \"ngIf\"], [1, \"container\"], [1, \"content-a\"], [1, \"content__details\"], [1, \"content__details__cover\", 3, \"src\", \"alt\"], [1, \"album-info\"], [1, \"tituloAlbum\"], [\"noArtistDetails\", \"\"], [\"class\", \"list-songs\", 4, \"ngIf\"], [1, \"list-songs\"], [1, \"row\", \"table_header\"], [1, \"col\"], [1, \"fas\", \"fa-heart\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col\", \"position-relative\"], [1, \"button\", \"button--primary\", \"button-play\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-play\"], [1, \"gly\", 3, \"click\"], [\"class\", \"glyphicon glyphicon-heart\", 4, \"ngIf\"], [\"class\", \"glyphicon glyphicon-heart-empty\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus-sign\"], [1, \"glyphicon\", \"glyphicon-heart\"], [1, \"glyphicon\", \"glyphicon-heart-empty\"], [3, \"selectedSong\", \"songs\", \"showControls\", \"mediaType\"]],\n    template: function SongsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SongsComponent_div_1_Template, 14, 7, \"div\", 1);\n        i0.ɵɵtemplate(2, SongsComponent_app_player_controls_2_Template, 1, 4, \"app-player-controls\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.albums);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedSong);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf],\n    styles: [\".content[_ngcontent-%COMP%] {\\n    height: 100%;\\n    background-color: black;\\n    width: 100%;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    background-color: #d9d9d933;\\n    font-size: 16px;\\n    font-family: 'Poppins', sans-serif;\\n    padding: 80px;\\n    color: white;\\n    font-weight: bold;\\n    height: auto;\\n    margin-top: 40px;\\n}\\n\\n.content-a[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    color: #333;\\n    font-weight: bold;\\n    margin-bottom: 20px;\\n}\\n\\n.content__details[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-right: auto;\\n    font-family: 'Poppins', sans-serif;\\n    color: white;\\n    font-weight: bold;\\n}\\n\\n.content__details__cover[_ngcontent-%COMP%] {\\n    width: 250px;\\n    height: 250px;\\n    margin-right: 20px;\\n    color: white;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    border-radius: 4px;\\n    border: none;\\n    text-transform: uppercase;\\n    padding: 8px 16px;\\n    background-color: #5551FF;\\n    color: #5551FF;\\n    font-weight: bold;\\n    transition: background-color 0.3s ease;\\n    display: none;\\n}\\n\\n.button[_ngcontent-%COMP%]:hover {\\n    background-color: #5551FF;\\n}\\n\\n.list-songs[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    font-family: 'Poppins', sans-serif;\\n}\\n\\n\\n\\n.list-songs[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    text-decoration: none;\\n    color: white;\\n\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n    display: flex;\\n    width: 100%;\\n    padding: 10px 0;\\n    border-bottom: 1px solid #333;\\n    align-items: center;\\n    font-size: 14px;\\n    margin: 5px;\\n}\\n\\n.col[_ngcontent-%COMP%] {\\n    flex: 1;\\n    padding: 0 5px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: normal;\\n    width: 90px;\\n    position: relative;\\n}\\n\\n\\n.col[_ngcontent-%COMP%]:nth-child(1):hover   .button[_ngcontent-%COMP%] {\\n    display: inline-block;\\n}\\n\\n.song-title[_ngcontent-%COMP%] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    color: white;\\n    font-weight: bold;\\n    position: relative;\\n}\\n\\n.glyphicon[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n    cursor: pointer;\\n}\\n\\n.gly[_ngcontent-%COMP%] {\\n    border: none;\\n    background-color: transparent;\\n}\\n\\n.glyphicon-heart-empty[_ngcontent-%COMP%] {\\n    color: grey;\\n}\\n\\n.glyphicon-heart[_ngcontent-%COMP%] {\\n    color: #5551FF;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    border: none;\\n    cursor: pointer;\\n    position: relative;\\n    top: 1%;\\n    transform: translateY(-3%);\\n    right: 15px;\\n}\\n.button[_ngcontent-%COMP%]:hover {\\n    opacity: 1;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    border-radius: 999px;\\n    border: none;\\n    text-transform: uppercase;\\n    padding: 0.5rem 1rem;\\n}\\n\\n.button--primary[_ngcontent-%COMP%] {\\n    background-color: #5551FF;\\n    color: white;\\n    border-radius: 999px;\\n    border: none;\\n    text-transform: uppercase;\\n    padding: 0.5rem 1rem;\\n}\\n\\n.spotify-player[_ngcontent-%COMP%] {\\n    width: 300px;\\n    background-color: #333;\\n    padding: 10px;\\n    border-radius: 5px;\\n}\\n\\n.controls[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.control-btn[_ngcontent-%COMP%] {\\n    width: 30px;\\n    height: 30px;\\n    border: none;\\n    background-color: transparent;\\n    cursor: pointer;\\n}\\n\\n.progress-bar[_ngcontent-%COMP%] {\\n    flex: 1;\\n    height: 5px;\\n    background-color: #888;\\n    margin: 0 10px;\\n    position: relative;\\n}\\n\\n.progress[_ngcontent-%COMP%] {\\n    height: 100%;\\n    background-color: #1db954;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n\\n.time[_ngcontent-%COMP%] {\\n    color: #fff;\\n}\\n\\n.button2[_ngcontent-%COMP%] {\\n    border-radius: 999px;\\n    border: none;\\n    text-transform: uppercase;\\n    padding: 0.5rem 1rem;\\n    right: 15px;\\n\\n}\\n\\n.tituloAlbum[_ngcontent-%COMP%] {\\n    font-size: 30px;\\n    font-family: 'Poppins', sans-serif;\\n    color: white;\\n    font-weight: bold;\\n}\\n\\n.album-info[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n    font-family: 'Poppins', sans-serif;\\n    color: white;\\n    font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9hbGJ1bS9zb25ncy9zb25ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsZUFBZTtJQUNmLGtDQUFrQztJQUNsQyxhQUFhO0lBQ2IsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQix5QkFBeUI7SUFDekIsY0FBYztJQUNkLGlCQUFpQjtJQUNqQixzQ0FBc0M7SUFDdEMsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsV0FBVztJQUNYLGtDQUFrQztBQUN0Qzs7OztBQUlBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7O0FBRWhCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCxlQUFlO0lBQ2YsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsV0FBVztBQUNmOztBQUVBO0lBQ0ksT0FBTztJQUNQLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCOzs7QUFHQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1osZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsMEJBQTBCO0lBQzFCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxPQUFPO0lBQ1AsV0FBVztJQUNYLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87QUFDWDs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLG9CQUFvQjtJQUNwQixXQUFXOztBQUVmOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5MzM7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgcGFkZGluZzogODBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogNDBweDtcclxufVxyXG5cclxuLmNvbnRlbnQtYSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uY29udGVudF9fZGV0YWlscyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNvbnRlbnRfX2RldGFpbHNfX2NvdmVyIHtcclxuICAgIHdpZHRoOiAyNTBweDtcclxuICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5idXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDhweCAxNnB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTFGRjtcclxuICAgIGNvbG9yOiAjNTU1MUZGO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5idXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTFGRjtcclxufVxyXG5cclxuLmxpc3Qtc29uZ3Mge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcblxyXG5cclxuLmxpc3Qtc29uZ3MgYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG59XHJcblxyXG4ucm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzMzO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG59XHJcblxyXG4uY29sIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBwYWRkaW5nOiAwIDVweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgICB3aWR0aDogOTBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuXHJcbi5jb2w6bnRoLWNoaWxkKDEpOmhvdmVyIC5idXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uc29uZy10aXRsZSB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5nbHlwaGljb24ge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZ2x5IHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4uZ2x5cGhpY29uLWhlYXJ0LWVtcHR5IHtcclxuICAgIGNvbG9yOiBncmV5O1xyXG59XHJcblxyXG4uZ2x5cGhpY29uLWhlYXJ0IHtcclxuICAgIGNvbG9yOiAjNTU1MUZGO1xyXG59XHJcblxyXG4uYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAxJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMyUpO1xyXG4gICAgcmlnaHQ6IDE1cHg7XHJcbn1cclxuLmJ1dHRvbjpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uYnV0dG9uIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDk5OXB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG59XHJcblxyXG4uYnV0dG9uLS1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTUxRkY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA5OTlweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxufVxyXG5cclxuLnNwb3RpZnktcGxheWVyIHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4uY29udHJvbHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jb250cm9sLWJ0biB7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucHJvZ3Jlc3MtYmFyIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBoZWlnaHQ6IDVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ODg7XHJcbiAgICBtYXJnaW46IDAgMTBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnByb2dyZXNzIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZGI5NTQ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG59XHJcblxyXG4udGltZSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmJ1dHRvbjIge1xyXG4gICAgYm9yZGVyLXJhZGl1czogOTk5cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgICByaWdodDogMTVweDtcclxuXHJcbn1cclxuXHJcbi50aXR1bG9BbGJ1bSB7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5hbGJ1bS1pbmZvIGg0IHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["ModalPlaylistsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SongsComponent_div_1_div_13_div_13_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r11","song_r6","$implicit","ctx_r10","ɵɵnextContext","ɵɵresetView","playSong","SongsComponent_div_1_div_13_div_13_Template_button_click_12_listener","ctx_r12","toggleFavorite","ɵɵtemplate","SongsComponent_div_1_div_13_div_13_span_13_Template","SongsComponent_div_1_div_13_div_13_span_14_Template","SongsComponent_div_1_div_13_div_13_Template_a_click_16_listener","ctx_r13","modalPlaylist","ɵɵadvance","ɵɵtextInterpolate1","i_r7","ɵɵtextInterpolate","songTitle","album","artist","artistName","duration","slice","ɵɵproperty","favorite","SongsComponent_div_1_div_13_div_13_Template","ctx_r4","albums","songs","SongsComponent_div_1_ng_template_11_Template","ɵɵtemplateRefExtractor","SongsComponent_div_1_div_13_Template","ctx_r0","coverImage","ɵɵsanitizeUrl","albumTitle","ɵɵtextInterpolate3","releaseDate","length","ctx_r1","selectedSong","showPlayerControls","SongsComponent","constructor","route","mediaService","albumService","FavoritesService","dialog","currentSongIndex","ngOnInit","paramMap","subscribe","params","album_Id","get","fetchAlbums","currentSong$","song","getSongOfAlbum","data","map","id","audio","description","console","log","playlist","error","songId","addToLikedSongs","setCurrentSong","dialogRef","open","afterClosed","result","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","MediaService","i3","AlbumService","i4","i5","MatDialog","_2","selectors","decls","vars","consts","template","SongsComponent_Template","rf","ctx","SongsComponent_div_1_Template","SongsComponent_app_player_controls_2_Template"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\album\\songs\\songs.component.ts","C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\album\\songs\\songs.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MediaService } from '../../../Services/player-control/media.service';\r\nimport { AlbumService } from 'src/app/Services/Album/album.service';\r\nimport { FavoritesService } from 'src/app/Services/Favorites/favorites.service';\r\nimport { ModalPlaylistsComponent } from './modal-playlists/modal-playlists.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.component.html',\r\n  styleUrls: ['./songs.component.css']\r\n})\r\nexport class SongsComponent implements OnInit {\r\n  [x: string]: any;\r\n\r\n  album_Id: number | undefined;\r\n  selectedSong: any = null;\r\n  currentSongIndex: number = -1;\r\n  albums: any;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private mediaService: MediaService,\r\n    private albumService: AlbumService,\r\n    private FavoritesService: FavoritesService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.album_Id = +params.get('albumId');\r\n      if (this.album_Id) {\r\n        this.fetchAlbums(this.album_Id);\r\n      }\r\n    });\r\n    this.mediaService.currentSong$.subscribe((song) => {\r\n      this.selectedSong = song;\r\n    });\r\n  }\r\n\r\n  fetchAlbums(album_Id: number) {\r\n    this.albumService.getSongOfAlbum(album_Id).subscribe(\r\n      (data: any) => {\r\n        this.albums = {\r\n          songs: data.map((song: any) => ({\r\n            id: song.id,\r\n            songTitle: song.songTitle,\r\n            audio: song.audio,\r\n            duration: song.duration,\r\n            album: {\r\n              id: song.album.id,\r\n              albumTitle: song.album.albumTitle,\r\n              releaseDate: song.album.releaseDate,\r\n              coverImage: song.album.coverImage,\r\n              artist: {\r\n                id: song.album.artist.id,\r\n                artistName: song.album.artist.artistName,\r\n                description: song.album.artist.description,\r\n              },\r\n            },\r\n          })),\r\n        };\r\n        console.log('Playlist:', this.playlist);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching playlist:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Toggles the favorite status of a song\r\n  toggleFavorite(song: any) {\r\n    // Toggle the favorite status of the song\r\n    song.favorite = !song.favorite;\r\n\r\n    // If the song is marked as favorite, add it to the liked songs\r\n    if (song.favorite) {\r\n      const songId = song.id;\r\n      this.FavoritesService.addToLikedSongs(songId);\r\n      console.log(songId);\r\n    }\r\n  }\r\n  playSong(song: any) {\r\n    try {\r\n      console.log('Canción seleccionada para reproducir:', song);\r\n      this.mediaService.setCurrentSong({ ...song, songs: this.albums.songs });\r\n      this.selectedSong = { ...song, songs: this.albums.songs };\r\n\r\n    } catch (error) {\r\n      console.error('Error playing song:', error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Opens the modal dialog for selecting a playlist\r\n  modalPlaylist(selectedSong: any) {\r\n    // Open the modal dialog with the selected song data\r\n    const dialogRef = this.dialog.open(ModalPlaylistsComponent, {\r\n      data: { selectedSong }\r\n    });\r\n\r\n    // Subscribe to the dialog close event\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"container\" *ngIf=\"albums\">\r\n\r\n        <!-- Album details section -->\r\n        <section class=\"content-a\">\r\n            <header class=\"content__details\">\r\n                <!-- Album cover image -->\r\n                <img class=\"content__details__cover\" [src]=\"albums.songs[0]?.album.coverImage\"\r\n                    [alt]=\"albums.songs[0]?.album.albumTitle\">\r\n\r\n                <!-- Album information -->\r\n                <div class=\"album-info\">\r\n                    <h4>Album</h4>\r\n                    <p class=\"tituloAlbum\">{{ albums.songs[0]?.album.albumTitle }}</p>\r\n                    <p>\r\n                        {{ albums.songs[0]?.album.artist?.artistName }},\r\n                        {{ albums.songs[0]?.album.releaseDate.slice(0,4) }},\r\n                        {{ albums.songs.length }} songs\r\n                    </p>\r\n                    <ng-template #noArtistDetails>\r\n                        <p>No artist details available</p>\r\n                    </ng-template>\r\n                </div>\r\n            </header>\r\n        </section>\r\n\r\n        <!-- Song list section -->\r\n        <div class=\"list-songs\" *ngIf=\"albums.songs && albums.songs.length > 0\">\r\n            <!-- Table header for Song list -->\r\n            <div class=\"row table_header\">\r\n                <div class=\"col\">#</div>\r\n                <div class=\"col\">Título</div>\r\n                <div class=\"col\">Artista</div>\r\n                <div class=\"col\">Duración</div>\r\n                <div class=\"col\"><i class=\"fas fa-heart\"></i></div>\r\n                <div class=\"col\"></div>\r\n            </div>\r\n\r\n            <!-- Iterate over songs to display each song -->\r\n            <div *ngFor=\"let song of albums.songs; let i = index\" class=\"row\">\r\n                <div class=\"col position-relative\">{{ i + 1 }}\r\n                    <!-- Play button for each song -->\r\n                    <button (click)=\"playSong(song)\" class=\"button button--primary button-play\">\r\n                        <span class=\"glyphicon glyphicon-play\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"col\">{{ song.songTitle }}</div>\r\n                <div class=\"col\">{{ song.album.artist.artistName }}</div>\r\n                <div class=\"col\">{{ song.duration.slice(3,8)  }}</div>\r\n                <div class=\"col\">\r\n                    <!-- Toggle favorite button -->\r\n                    <button class=\"gly\" (click)=\"toggleFavorite(song)\">\r\n                        <span *ngIf=\"song.favorite\" class=\"glyphicon glyphicon-heart\"></span>\r\n                        <span *ngIf=\"!song.favorite\" class=\"glyphicon glyphicon-heart-empty\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <a (click)=\"modalPlaylist(song)\" class=\"btn btn-primary btn-lg\">\r\n                        <span class=\"glyphicon glyphicon-plus-sign\"></span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- Player controls section -->\r\n    <app-player-controls *ngIf=\"selectedSong\" [selectedSong]=\"selectedSong\" [songs]=\"albums.songs\"\r\n        [showControls]=\"showPlayerControls\" [mediaType]=\"'audio'\">\r\n    </app-player-controls>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}