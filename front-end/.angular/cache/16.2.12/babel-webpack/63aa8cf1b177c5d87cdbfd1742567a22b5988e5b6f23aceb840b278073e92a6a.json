{"ast":null,"code":"import { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ArtistService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:8000';\n    this.selectedAlbumSubject = new BehaviorSubject(null);\n    this.selectedAlbum$ = this.selectedAlbumSubject.asObservable();\n    this.selectedArtistIdSource = new BehaviorSubject(null);\n    this.selectedArtistId$ = this.selectedArtistIdSource.asObservable();\n  }\n  // Method to get the artists\n  getArtists() {\n    const url = `${this.apiUrl}/artists/`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.error('Error fetching artists:', error);\n      return throwError(error);\n    }), map(artists => {\n      return artists.map(artists => ({\n        id: artists.id,\n        artistName: artists.artistName,\n        description: artists.description,\n        coverImage: `${this.apiUrl}${artists.coverImage}`\n      }));\n    }));\n  }\n  setSelectedArtistId(artistId) {\n    this.selectedArtistIdSource.next(artistId);\n  }\n  static #_ = this.ɵfac = function ArtistService_Factory(t) {\n    return new (t || ArtistService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArtistService,\n    factory: ArtistService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","throwError","catchError","map","ArtistService","constructor","http","apiUrl","selectedAlbumSubject","selectedAlbum$","asObservable","selectedArtistIdSource","selectedArtistId$","getArtists","url","get","pipe","error","console","artists","id","artistName","description","coverImage","setSelectedArtistId","artistId","next","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Services\\Artists\\artists.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin, Observable, throwError } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n\r\n  private apiUrl = 'http://127.0.0.1:8000';\r\n\r\n  private selectedAlbumSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public selectedAlbum$: Observable<any> = this.selectedAlbumSubject.asObservable();\r\n  private selectedArtistIdSource = new BehaviorSubject<number | null>(null);\r\n  selectedArtistId$ = this.selectedArtistIdSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Method to get the artists\r\n  getArtists(): Observable<any[]> {\r\n    const url = `${this.apiUrl}/artists/`;\r\n    return this.http.get<any[]>(url).pipe(\r\n      catchError(error => {\r\n        console.error('Error fetching artists:', error);\r\n        return throwError(error);\r\n      }),\r\n      map(artists =>{\r\n          return artists.map(artists => ({\r\n            id: artists.id,\r\n            artistName: artists.artistName,\r\n            description: artists.description,\r\n            coverImage: `${this.apiUrl}${artists.coverImage}`,\r\n\r\n          }));\r\n        })\r\n      );\r\n    }\r\n\r\n    setSelectedArtistId(artistId: number | null) {\r\n      this.selectedArtistIdSource.next(artistId);\r\n    }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,EAAwBC,UAAU,QAAQ,MAAM;AAExE,SAASC,UAAU,EAAEC,GAAG,QAAmB,gBAAgB;;;AAK3D,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPhB,KAAAC,MAAM,GAAG,uBAAuB;IAEhC,KAAAC,oBAAoB,GAAyB,IAAIR,eAAe,CAAM,IAAI,CAAC;IAC5E,KAAAS,cAAc,GAAoB,IAAI,CAACD,oBAAoB,CAACE,YAAY,EAAE;IACzE,KAAAC,sBAAsB,GAAG,IAAIX,eAAe,CAAgB,IAAI,CAAC;IACzE,KAAAY,iBAAiB,GAAG,IAAI,CAACD,sBAAsB,CAACD,YAAY,EAAE;EAEtB;EAExC;EACAG,UAAUA,CAAA;IACR,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,WAAW;IACrC,OAAO,IAAI,CAACD,IAAI,CAACS,GAAG,CAAQD,GAAG,CAAC,CAACE,IAAI,CACnCd,UAAU,CAACe,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAOhB,UAAU,CAACgB,KAAK,CAAC;IAC1B,CAAC,CAAC,EACFd,GAAG,CAACgB,OAAO,IAAG;MACV,OAAOA,OAAO,CAAChB,GAAG,CAACgB,OAAO,KAAK;QAC7BC,EAAE,EAAED,OAAO,CAACC,EAAE;QACdC,UAAU,EAAEF,OAAO,CAACE,UAAU;QAC9BC,WAAW,EAAEH,OAAO,CAACG,WAAW;QAChCC,UAAU,EAAE,GAAG,IAAI,CAAChB,MAAM,GAAGY,OAAO,CAACI,UAAU;OAEhD,CAAC,CAAC;IACL,CAAC,CAAC,CACH;EACH;EAEAC,mBAAmBA,CAACC,QAAuB;IACzC,IAAI,CAACd,sBAAsB,CAACe,IAAI,CAACD,QAAQ,CAAC;EAC5C;EAAC,QAAAE,CAAA,G;qBAjCQvB,aAAa,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb5B,aAAa;IAAA6B,OAAA,EAAb7B,aAAa,CAAA8B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}