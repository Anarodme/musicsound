{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/Podcast/podcast-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction CategoriesPodcastComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function CategoriesPodcastComponent_div_7_Template_a_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const category_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.navigateToPodcasts(category_r1.id));\n    });\n    i0.ɵɵelement(5, \"img\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(category_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", category_r1.coverImage, i0.ɵɵsanitizeUrl)(\"alt\", category_r1.name);\n  }\n}\nexport class CategoriesPodcastComponent {\n  constructor(router, categoriesPodcastService) {\n    this.router = router;\n    this.categoriesPodcastService = categoriesPodcastService;\n  }\n  ngOnInit() {\n    // Fetch the list of podcast categories\n    this.categoriesPodcastService.GetAllPodcastCategories().subscribe(data => {\n      this.categories = data; // Assign fetched data to the categories array\n      console.log(data);\n    }, error => {\n      console.error('Error loading categories:', error); // Log any errors that occur\n    });\n  }\n  // Method to navigate to the podcasts page filtered by a specific category\n  navigateToPodcasts(categoryId) {\n    //this.categoriesPodcastService.toggleCategories(false);  // Update the category filter status\n    this.router.navigate(['podcast', categoryId]); // Navigate to the podcasts page with the selected category\n  }\n  static #_ = this.ɵfac = function CategoriesPodcastComponent_Factory(t) {\n    return new (t || CategoriesPodcastComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PodcastServiceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoriesPodcastComponent,\n    selectors: [[\"app-categories-podcast\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"categories\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"categories-info\"], [3, \"click\"], [3, \"src\", \"alt\"]],\n    template: function CategoriesPodcastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"h3\");\n        i0.ɵɵtext(3, \"P\\u00D3DCASTS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Categor\\u00EDas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵtemplate(7, CategoriesPodcastComponent_div_7_Template, 6, 3, \"div\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    width: 100%;\\n    background-color: black;\\n    padding: 20px 0; \\n    color: white; \\n    align-items: center;\\n    height: 800px;\\n}\\n  \\n.container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-family: 'Poppins', sans-serif;\\n    font-weight: bold;\\n    font-size: 35px; \\n    text-align: left; \\n    margin-left: 20px;\\n    padding-bottom: 10px;\\n}\\n.container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-family: 'Poppins', sans-serif;\\n    font-weight: bold;\\n    font-size: 20px; \\n    text-align: left; \\n    margin-left: 20px;\\n    padding-bottom: 15px;\\n}\\n  \\n.categories[_ngcontent-%COMP%] {\\n    width: 1000px; \\n    margin: 20px auto;\\n    display: grid;\\n    grid-template-columns: repeat(4, 2fr);\\n    grid-gap: 30px;\\n    \\n}\\n  \\n.card[_ngcontent-%COMP%] {\\n    border-radius: 8px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n    overflow: hidden;\\n    text-align: center; \\n    color: white;\\n    padding: 15px; \\n    background-color: #F24646; \\n\\n}\\n  \\n.card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    width: 100%; \\n    height: auto; \\n}\\n  \\n.categories-info[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    font-family: 'Poppins', sans-serif;\\n    font-weight: bold;\\n    font-size: 18px; \\n}\\n\\n.categories-info[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    margin: 0;\\n    font-size: 18px; \\n    padding: 8px;\\n    text-align: center;\\n    color: black;\\n}\\n  \\n.year[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n    font-size: 0.9em;\\n    text-align: center; \\n}\\n\\n@media screen and (max-width: 1200px) {\\n    .categories[_ngcontent-%COMP%] {\\n        grid-template-columns: repeat(3, 1fr);\\n    }\\n}\\n\\n@media screen and (max-width: 900px) {\\n    .categories[_ngcontent-%COMP%] {\\n        grid-template-columns: repeat(2, 1fr);\\n    }\\n}\\n\\n@media screen and (max-width: 600px) {\\n    .categories[_ngcontent-%COMP%] {\\n        grid-template-columns: repeat(1, 1fr);\\n    }\\n}\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9jYXRlZ29yaWVzLXBvZGNhc3QvY2F0ZWdvcmllcy1wb2RjYXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQ0FBa0M7SUFDbEMsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksa0NBQWtDO0lBQ2xDLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixxQ0FBcUM7SUFDckMsY0FBYzs7QUFFbEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsd0NBQXdDO0lBQ3hDLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGFBQWE7SUFDYix5QkFBeUI7O0FBRTdCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isa0NBQWtDO0lBQ2xDLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksU0FBUztJQUNULGVBQWU7SUFDZixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJO1FBQ0kscUNBQXFDO0lBQ3pDO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLHFDQUFxQztJQUN6QztBQUNKOztBQUVBO0lBQ0k7UUFDSSxxQ0FBcUM7SUFDekM7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIHBhZGRpbmc6IDIwcHggMDsgXHJcbiAgICBjb2xvcjogd2hpdGU7IFxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogODAwcHg7XHJcbn1cclxuICBcclxuLmNvbnRhaW5lciBoMyB7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDM1cHg7IFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDsgXHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG59XHJcbi5jb250YWluZXIgaDIge1xyXG4gICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7IFxyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcclxufVxyXG4gIFxyXG4uY2F0ZWdvcmllcyB7XHJcbiAgICB3aWR0aDogMTAwMHB4OyBcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDJmcik7XHJcbiAgICBncmlkLWdhcDogMzBweDtcclxuICAgIFxyXG59XHJcbiAgXHJcbi5jYXJkIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7IFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YyNDY0NjsgXHJcblxyXG59XHJcbiAgXHJcbi5jYXJkIGltZyB7XHJcbiAgICB3aWR0aDogMTAwJTsgXHJcbiAgICBoZWlnaHQ6IGF1dG87IFxyXG59XHJcbiAgXHJcbi5jYXRlZ29yaWVzLWluZm8ge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMThweDsgXHJcbn1cclxuXHJcbi5jYXRlZ29yaWVzLWluZm8gaDIge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1zaXplOiAxOHB4OyBcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG4gIFxyXG4ueWVhciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAuY2F0ZWdvcmllcyB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcclxuICAgIC5jYXRlZ29yaWVzIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgLmNhdGVnb3JpZXMge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEsIDFmcik7XHJcbiAgICB9XHJcbn1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CategoriesPodcastComponent_div_7_Template_a_click_4_listener","restoredCtx","ɵɵrestoreView","_r3","category_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","navigateToPodcasts","id","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵproperty","coverImage","ɵɵsanitizeUrl","CategoriesPodcastComponent","constructor","router","categoriesPodcastService","ngOnInit","GetAllPodcastCategories","subscribe","data","categories","console","log","error","categoryId","navigate","_","ɵɵdirectiveInject","i1","Router","i2","PodcastServiceService","_2","selectors","decls","vars","consts","template","CategoriesPodcastComponent_Template","rf","ctx","ɵɵtemplate","CategoriesPodcastComponent_div_7_Template"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\categories-podcast\\categories-podcast.component.ts","C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\categories-podcast\\categories-podcast.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PodcastServiceService } from 'src/app/Services/Podcast/podcast-service.service';\r\n\r\n// Interface to define the structure of podcast categories\r\ninterface Categories {\r\n  name: string;\r\n  imageUrl: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-categories-podcast',\r\n  templateUrl: './categories-podcast.component.html',\r\n  styleUrls: ['./categories-podcast.component.css']\r\n})\r\nexport class CategoriesPodcastComponent implements OnInit {\r\n  categories: Categories[];  // Array to hold the list of podcast categories\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private categoriesPodcastService: PodcastServiceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Fetch the list of podcast categories\r\n    this.categoriesPodcastService.GetAllPodcastCategories().subscribe(\r\n      data => {\r\n        this.categories = data;  // Assign fetched data to the categories array\r\n        console.log(data)\r\n      },\r\n      error => {\r\n        console.error('Error loading categories:', error);  // Log any errors that occur\r\n      }\r\n    );\r\n  }\r\n\r\n  // Method to navigate to the podcasts page filtered by a specific category\r\n  navigateToPodcasts(categoryId: number): void {\r\n    //this.categoriesPodcastService.toggleCategories(false);  // Update the category filter status\r\n    this.router.navigate(['podcast', categoryId]);  // Navigate to the podcasts page with the selected category\r\n  }\r\n}\r\n","<body>\r\n    <div class=\"container\">\r\n        <h3>PÓDCASTS</h3>\r\n        <h2>Categorías</h2>\r\n        <div class=\"categories\">\r\n            <div *ngFor=\"let category of categories\" class=\"card\">\r\n                <div class=\"categories-info\">\r\n                    <h2>{{ category.name }}</h2>\r\n                </div>\r\n                <a (click)=\"navigateToPodcasts(category.id)\"><img [src]=\"category.coverImage\" [alt]=\"category.name\"></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n"],"mappings":";;;;;;;ICKYA,EAAA,CAAAC,cAAA,aAAsD;IAE1CD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAEhCH,EAAA,CAAAC,cAAA,WAA6C;IAA1CD,EAAA,CAAAI,UAAA,mBAAAC,6DAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,WAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,kBAAA,CAAAL,WAAA,CAAAM,EAAA,CAA+B;IAAA,EAAC;IAACf,EAAA,CAAAgB,SAAA,aAAuD;IAAAhB,EAAA,CAAAG,YAAA,EAAI;;;;IAFhGH,EAAA,CAAAiB,SAAA,GAAmB;IAAnBjB,EAAA,CAAAkB,iBAAA,CAAAT,WAAA,CAAAU,IAAA,CAAmB;IAEuBnB,EAAA,CAAAiB,SAAA,GAA2B;IAA3BjB,EAAA,CAAAoB,UAAA,QAAAX,WAAA,CAAAY,UAAA,EAAArB,EAAA,CAAAsB,aAAA,CAA2B,QAAAb,WAAA,CAAAU,IAAA;;;ADM7F,OAAM,MAAOI,0BAA0B;EAGrCC,YACUC,MAAc,EACdC,wBAA+C;IAD/C,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,wBAAwB,GAAxBA,wBAAwB;EAC/B;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,wBAAwB,CAACE,uBAAuB,EAAE,CAACC,SAAS,CAC/DC,IAAI,IAAG;MACL,IAAI,CAACC,UAAU,GAAGD,IAAI,CAAC,CAAE;MACzBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,EACDI,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC,CAAE;IACtD,CAAC,CACF;EACH;EAEA;EACApB,kBAAkBA,CAACqB,UAAkB;IACnC;IACA,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,SAAS,EAAED,UAAU,CAAC,CAAC,CAAC,CAAE;EAClD;EAAC,QAAAE,CAAA,G;qBAzBUd,0BAA0B,EAAAvB,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,qBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA1BpB,0BAA0B;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfvClD,EAAA,CAAAC,cAAA,WAAM;QAEMD,EAAA,CAAAE,MAAA,oBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACjBH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,sBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnBH,EAAA,CAAAC,cAAA,aAAwB;QACpBD,EAAA,CAAAoD,UAAA,IAAAC,yCAAA,iBAKM;QACVrD,EAAA,CAAAG,YAAA,EAAM;;;QANwBH,EAAA,CAAAiB,SAAA,GAAa;QAAbjB,EAAA,CAAAoB,UAAA,YAAA+B,GAAA,CAAApB,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}