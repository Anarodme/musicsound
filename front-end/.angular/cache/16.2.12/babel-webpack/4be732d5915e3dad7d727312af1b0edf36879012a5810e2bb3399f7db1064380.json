{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"audioPlayer\"];\nexport class MusicPlayerComponent {\n  constructor() {\n    // Playback state variables\n    this.isPlaying = false;\n    this.currentTime = '0:00';\n    this.duration = '0:00';\n    this.progressValue = 0;\n    // Array of audio URLs\n    this.audios = ['../../../assets/The Power of Equality-RHCP.mpeg', '../../../assets/Breaking the girl-RHCP.mpeg', '../../../assets/I could have lied-RHCP.mpeg', '../../../assets/If you have to ask-RHCP.mpeg'];\n    // Array of song names\n    this.audioNames = ['The Power Of Equality', 'Breaking The Girl', 'I Could Have Lied', 'If You Have To Ask'];\n    //Current playback type (Album-Podcast-Playlist-Favorites)\n    this.currentPlayingType = 'ÁLBUM';\n    // Album-Podcast-Playlist-Favorites name\n    this.content_name = 'Blood Sugar Sex Magik';\n    // Album-Podcast-Playlist-Favorites cover URL\n    this.content_cover = 'https://upload.wikimedia.org/wikipedia/en/5/5e/RHCP-BSSM.jpg';\n    // Artist name\n    this.artist = 'Red Hot Chilli Peppers';\n    // Index of the currently playing song\n    this.currentSongIndex = 0;\n  }\n  // After the view has been initialized, set up an event listener for the 'ended' event on the audio player\n  ngAfterViewInit() {\n    if (this.audioPlayer) {\n      const audio = this.audioPlayer.nativeElement;\n      audio.addEventListener('ended', () => {\n        this.play_next_song();\n      });\n    }\n  }\n  // Toggle play/pause of the current song\n  play_pause_song() {\n    const audio = this.audioPlayer.nativeElement;\n    if (audio.paused) {\n      audio.play();\n      this.isPlaying = true;\n      this.progressInterval = setInterval(() => {\n        this.updateProgressBar();\n      }, 1000);\n    } else {\n      audio.pause();\n      this.isPlaying = false;\n      clearInterval(this.progressInterval);\n    }\n  }\n  // Play the next song\n  play_next_song() {\n    this.currentSongIndex = (this.currentSongIndex + 1) % this.audios.length;\n    this.playSong(this.currentSongIndex);\n  }\n  // Play the previous song\n  play_previous_song() {\n    this.currentSongIndex = (this.currentSongIndex - 1 + this.audios.length) % this.audios.length;\n    this.playSong(this.currentSongIndex);\n  }\n  // Play the song at the specified index\n  playSong(index) {\n    const audio = this.audioPlayer.nativeElement;\n    audio.src = this.audios[index];\n    audio.load();\n    audio.play();\n    this.isPlaying = true;\n    this.updateProgressBar();\n    this.currentSongIndex = index;\n  }\n  // Get the icon for the play/pause button\n  getPlayButtonIcon() {\n    return this.isPlaying ? 'fa-pause' : 'fa-play';\n  }\n  // Update the progress bar and current time display\n  updateProgressBar() {\n    const audio = this.audioPlayer.nativeElement;\n    if (audio.readyState >= 2) {\n      const currentMinutes = Math.floor(audio.currentTime / 60);\n      const currentSeconds = Math.floor(audio.currentTime % 60);\n      const durationMinutes = Math.floor(audio.duration / 60);\n      const durationSeconds = Math.floor(audio.duration % 60);\n      this.currentTime = `${currentMinutes}:${currentSeconds < 10 ? '0' : ''}${currentSeconds}`;\n      this.duration = `${durationMinutes}:${durationSeconds < 10 ? '0' : ''}${durationSeconds}`;\n      this.progressValue = audio.currentTime / audio.duration * 100;\n    }\n  }\n  // Handle change in progress bar\n  handleProgressBar(event) {\n    const audio = this.audioPlayer.nativeElement;\n    const newPosition = event.target.value / 100 * audio.duration;\n    audio.currentTime = newPosition;\n  }\n  static #_ = this.ɵfac = function MusicPlayerComponent_Factory(t) {\n    return new (t || MusicPlayerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MusicPlayerComponent,\n    selectors: [[\"app-music-player\"]],\n    viewQuery: function MusicPlayerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.audioPlayer = _t.first);\n      }\n    },\n    decls: 33,\n    vars: 10,\n    consts: [[1, \"container1\"], [1, \"title1\"], [1, \"title2\"], [\"alt\", \"\", 1, \"song-cover\", 3, \"src\"], [1, \"song-info\"], [1, \"info\"], [1, \"p1\"], [1, \"p2\"], [\"id\", \"favoriteBtn\", 1, \"btn\", \"btn-outline-danger\"], [\"id\", \"heartIcon\", 1, \"fas\", \"fa-heart\"], [\"audioPlayer\", \"\"], [\"type\", \"audio/mpeg\", 3, \"src\"], [1, \"controls\", \"mt-3\", \"player-button\"], [1, \"btn\", \"btn-primary\", \"skip-btn\", 3, \"click\"], [1, \"fas\", \"fa-backward\"], [1, \"btn\", \"btn-primary\", \"play-pause-btn\", 3, \"click\"], [1, \"fas\", 3, \"ngClass\"], [1, \"fas\", \"fa-forward\"], [1, \"progress-style\"], [1, \"time-left\"], [\"id\", \"progressBar\", \"type\", \"range\", \"min\", \"0\", \"max\", \"100\", 1, \"form-range\", 3, \"value\", \"input\"], [1, \"time-right\"]],\n    template: function MusicPlayerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"p\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\");\n        i0.ɵɵelement(7, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"p\", 6);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\", 7);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵelement(15, \"i\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"audio\", null, 10);\n        i0.ɵɵelement(18, \"source\", 11);\n        i0.ɵɵtext(19, \" Tu navegador no soporta el elemento de audio. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12)(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MusicPlayerComponent_Template_button_click_21_listener() {\n          return ctx.play_previous_song();\n        });\n        i0.ɵɵelement(22, \"i\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function MusicPlayerComponent_Template_button_click_23_listener() {\n          return ctx.play_pause_song();\n        });\n        i0.ɵɵelement(24, \"i\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MusicPlayerComponent_Template_button_click_25_listener() {\n          return ctx.play_next_song();\n        });\n        i0.ɵɵelement(26, \"i\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 18)(28, \"div\", 19);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 20);\n        i0.ɵɵlistener(\"input\", function MusicPlayerComponent_Template_input_input_30_listener($event) {\n          return ctx.handleProgressBar($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 21);\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"REPRODUCIENDO DESDE \", ctx.currentPlayingType, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.content_name, \"k\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"src\", ctx.content_cover, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.audioNames[ctx.currentSongIndex]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.artist);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"src\", ctx.audios[ctx.currentSongIndex], i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", ctx.getPlayButtonIcon());\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.currentTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.progressValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.duration);\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\".container1[_ngcontent-%COMP%]{\\n    background-color: black;\\n    width: auto;\\n    height: 900px;\\n    font-family: 'Poppins';\\n    color: white;\\n}\\n\\n\\n\\n.title1[_ngcontent-%COMP%]{\\n    padding-top: 15px;\\n    text-align: center;\\n    font-size: 24px;\\n}\\n\\n.title2[_ngcontent-%COMP%]{\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold;\\n}\\n\\n.song-cover[_ngcontent-%COMP%]{\\n    width: 500px;\\n    height: 500px;\\n    padding-top: 15px;\\n    display: block;\\n    margin: auto;\\n    border-radius: 10px;\\n}\\n\\n.song-info[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: space-between; \\n    align-items: center; \\n    width: 100%;\\n    padding-right: 295px;\\n}\\n\\n.info[_ngcontent-%COMP%]{\\n    padding-top: 20px;\\n    padding-left: 170px;\\n    flex-grow: 1; \\n    text-align: left; \\n}\\n\\n.p1[_ngcontent-%COMP%]{\\n    font-size: 18px;\\n    font-weight: bold;\\n}\\n\\n.p2[_ngcontent-%COMP%]{\\n    font-size: 16px;\\n}\\n\\n\\n\\n.player-button[_ngcontent-%COMP%]{\\n    text-align: center;\\n    padding-top: 30px;\\n}\\n\\n.btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n   font-size: 25px;\\n}\\n\\n.btn[_ngcontent-%COMP%]:focus {\\n    outline: none;\\n}\\n\\n#favoriteBtn[_ngcontent-%COMP%] {\\n    color: white;\\n    background-color: transparent;\\n    border: none;\\n}\\n\\n.play-pause-btn[_ngcontent-%COMP%] {\\n    color: white;\\n    border-radius: 30px;\\n    background-color: blue;\\n    border: none;\\n    margin-right: 20px;\\n}\\n\\n.play-pause-btn[_ngcontent-%COMP%]:hover, .play-pause-btn[_ngcontent-%COMP%]:focus, .play-pause-btn[_ngcontent-%COMP%]:active {\\n    background-color: blue; \\n}\\n\\n.skip-btn[_ngcontent-%COMP%] {\\n    color: white;\\n    background-color: transparent;\\n    border: none;\\n    margin-right: 20px;\\n}\\n\\n.skip-btn[_ngcontent-%COMP%]:hover, .skip-btn[_ngcontent-%COMP%]:focus, .skip-btn[_ngcontent-%COMP%]:active {\\n    background-color: transparent; \\n    border: black;\\n}\\n\\n\\n\\n.progress-style[_ngcontent-%COMP%]{\\n    width: 600px;\\n    display: block;\\n    margin: auto;\\n    padding-top: 30px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.form-range[_ngcontent-%COMP%]::-webkit-slider-runnable-track {\\n    background-color: white;\\n}\\n\\n.form-range[_ngcontent-%COMP%]::-webkit-slider-thumb {\\n    background-color: white;\\n    border: 2px solid white; \\n    height: 15px; \\n    width: 15px; \\n    margin-top: -6px;\\n}\\n\\n.time-left[_ngcontent-%COMP%] {\\n    margin-right: auto; \\n    padding-right: 15px;\\n    font-size: 15px;\\n}\\n  \\n.time-right[_ngcontent-%COMP%] {\\n    margin-left: auto; \\n    padding-left: 15px;\\n    font-size: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9tdXNpYy1wbGF5ZXIvbXVzaWMtcGxheWVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7SUFDdkIsV0FBVztJQUNYLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtBQUNoQjs7QUFFQSxtQkFBbUI7QUFDbkI7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7R0FDRyxlQUFlO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0IsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7OztJQUdJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTs7O0lBR0ksNkJBQTZCO0lBQzdCLGFBQWE7QUFDakI7O0FBRUEsZUFBZTtBQUNmO0lBQ0ksWUFBWTtJQUNaLGNBQWM7SUFDZCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixXQUFXO0lBQ1gsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcjF7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiA5MDBweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucyc7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qU29uZyBpbmZvcm1hdGlvbiovXHJcbi50aXRsZTF7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxufVxyXG5cclxuLnRpdGxlMntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4uc29uZy1jb3ZlcntcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLnNvbmctaW5mb3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IFxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI5NXB4O1xyXG59XHJcblxyXG4uaW5mb3tcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNzBweDtcclxuICAgIGZsZXgtZ3JvdzogMTsgXHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyBcclxufVxyXG5cclxuLnAxe1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5wMntcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuLypQbGF5ZXIgY29udHJvbHMqL1xyXG4ucGxheWVyLWJ1dHRvbntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xyXG59XHJcblxyXG4uYnRuIGkge1xyXG4gICBmb250LXNpemU6IDI1cHg7XHJcbn1cclxuXHJcbi5idG46Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuI2Zhdm9yaXRlQnRuIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4ucGxheS1wYXVzZS1idG4ge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5wbGF5LXBhdXNlLWJ0bjpob3ZlcixcclxuLnBsYXktcGF1c2UtYnRuOmZvY3VzLFxyXG4ucGxheS1wYXVzZS1idG46YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7IFxyXG59XHJcblxyXG4uc2tpcC1idG4ge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5za2lwLWJ0bjpob3ZlcixcclxuLnNraXAtYnRuOmZvY3VzLFxyXG4uc2tpcC1idG46YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyBcclxuICAgIGJvcmRlcjogYmxhY2s7XHJcbn1cclxuXHJcbi8qUHJvZ3Jlc3MgYmFyKi9cclxuLnByb2dyZXNzLXN0eWxle1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZm9ybS1yYW5nZTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5mb3JtLXJhbmdlOjotd2Via2l0LXNsaWRlci10aHVtYiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlOyBcclxuICAgIGhlaWdodDogMTVweDsgXHJcbiAgICB3aWR0aDogMTVweDsgXHJcbiAgICBtYXJnaW4tdG9wOiAtNnB4O1xyXG59XHJcblxyXG4udGltZS1sZWZ0IHtcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bzsgXHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbiAgXHJcbi50aW1lLXJpZ2h0IHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyBcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MusicPlayerComponent","constructor","isPlaying","currentTime","duration","progressValue","audios","audioNames","currentPlayingType","content_name","content_cover","artist","currentSongIndex","ngAfterViewInit","audioPlayer","audio","nativeElement","addEventListener","play_next_song","play_pause_song","paused","play","progressInterval","setInterval","updateProgressBar","pause","clearInterval","length","playSong","play_previous_song","index","src","load","getPlayButtonIcon","readyState","currentMinutes","Math","floor","currentSeconds","durationMinutes","durationSeconds","handleProgressBar","event","newPosition","target","value","_","_2","selectors","viewQuery","MusicPlayerComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","MusicPlayerComponent_Template_button_click_21_listener","MusicPlayerComponent_Template_button_click_23_listener","MusicPlayerComponent_Template_button_click_25_listener","MusicPlayerComponent_Template_input_input_30_listener","$event","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty","ɵɵsanitizeUrl","ɵɵtextInterpolate"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\music-player\\music-player.component.ts","C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\music-player\\music-player.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-music-player',\r\n  templateUrl: './music-player.component.html',\r\n  styleUrls: ['./music-player.component.css']\r\n})\r\n\r\nexport class MusicPlayerComponent {\r\n  @ViewChild('audioPlayer') audioPlayer: ElementRef | undefined;\r\n\r\n  // Playback state variables\r\n  isPlaying: boolean = false;\r\n  currentTime: string = '0:00';\r\n  duration: string = '0:00';\r\n  progressInterval: any;\r\n  progressValue: number = 0;\r\n\r\n  // Array of audio URLs\r\n  audios: string[] = [  \r\n  '../../../assets/The Power of Equality-RHCP.mpeg',\r\n  '../../../assets/Breaking the girl-RHCP.mpeg',\r\n  '../../../assets/I could have lied-RHCP.mpeg',\r\n  '../../../assets/If you have to ask-RHCP.mpeg'\r\n  ];\r\n\r\n   // Array of song names\r\n  audioNames: string[] = [  \r\n    'The Power Of Equality',\r\n    'Breaking The Girl',\r\n    'I Could Have Lied',\r\n    'If You Have To Ask'\r\n  ];\r\n  \r\n  //Current playback type (Album-Podcast-Playlist-Favorites)\r\n  currentPlayingType: string = 'ÁLBUM'; \r\n\r\n  // Album-Podcast-Playlist-Favorites name\r\n  content_name: string = 'Blood Sugar Sex Magik';\r\n\r\n  // Album-Podcast-Playlist-Favorites cover URL\r\n  content_cover: string = 'https://upload.wikimedia.org/wikipedia/en/5/5e/RHCP-BSSM.jpg';\r\n\r\n  // Artist name\r\n  artist: string = 'Red Hot Chilli Peppers';\r\n  \r\n  // Index of the currently playing song\r\n  currentSongIndex: number = 0;  \r\n\r\n  // After the view has been initialized, set up an event listener for the 'ended' event on the audio player\r\n  ngAfterViewInit() {\r\n    if (this.audioPlayer) {\r\n      const audio = this.audioPlayer.nativeElement as HTMLAudioElement;\r\n      audio.addEventListener('ended', () => {\r\n        this.play_next_song();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Toggle play/pause of the current song\r\n  play_pause_song() {\r\n    const audio = this.audioPlayer.nativeElement as HTMLAudioElement;\r\n    if (audio.paused) {\r\n      audio.play();\r\n      this.isPlaying = true;\r\n      this.progressInterval = setInterval(() => {\r\n        this.updateProgressBar();\r\n      }, 1000);\r\n    } else {\r\n      audio.pause();\r\n      this.isPlaying = false;\r\n      clearInterval(this.progressInterval);\r\n    }\r\n  }\r\n\r\n  // Play the next song\r\n  play_next_song() {\r\n    this.currentSongIndex = (this.currentSongIndex + 1) % this.audios.length;\r\n    this.playSong(this.currentSongIndex);\r\n  }\r\n\r\n  // Play the previous song\r\n  play_previous_song() {\r\n    this.currentSongIndex = (this.currentSongIndex - 1 + this.audios.length) % this.audios.length;\r\n    this.playSong(this.currentSongIndex);\r\n  }\r\n\r\n   // Play the song at the specified index\r\n  playSong(index: number) {\r\n    const audio = this.audioPlayer.nativeElement as HTMLAudioElement;\r\n    audio.src = this.audios[index];\r\n    audio.load();\r\n    audio.play();\r\n    this.isPlaying = true;\r\n    this.updateProgressBar();\r\n    this.currentSongIndex = index; \r\n  }\r\n\r\n  // Get the icon for the play/pause button\r\n  getPlayButtonIcon() {\r\n    return this.isPlaying ? 'fa-pause' : 'fa-play';\r\n  }\r\n\r\n  // Update the progress bar and current time display\r\n  updateProgressBar() {\r\n    const audio = this.audioPlayer.nativeElement as HTMLAudioElement;\r\n    if (audio.readyState >= 2) { \r\n      const currentMinutes = Math.floor(audio.currentTime / 60);\r\n      const currentSeconds = Math.floor(audio.currentTime % 60);\r\n      const durationMinutes = Math.floor(audio.duration / 60);\r\n      const durationSeconds = Math.floor(audio.duration % 60);\r\n      this.currentTime = `${currentMinutes}:${currentSeconds < 10 ? '0' : ''}${currentSeconds}`;\r\n      this.duration = `${durationMinutes}:${durationSeconds < 10 ? '0' : ''}${durationSeconds}`;\r\n      this.progressValue = (audio.currentTime / audio.duration) * 100;\r\n    }\r\n  }\r\n\r\n  // Handle change in progress bar\r\n  handleProgressBar(event: any) {\r\n    const audio = this.audioPlayer.nativeElement as HTMLAudioElement;\r\n    const newPosition = (event.target.value / 100) * audio.duration;\r\n    audio.currentTime = newPosition;\r\n  }\r\n}","<body>\r\n    <div class=\"container1\">\r\n        <!--Playing from...-->\r\n        <p class=\"title1\">REPRODUCIENDO DESDE {{currentPlayingType}}</p>\r\n\r\n        <!--Favorite-podcast-album-playlist name-->\r\n        <p class=\"title2\">{{content_name}}k</p>\r\n\r\n        <div>\r\n            <!--Audio cover-->\r\n            <img class=\"song-cover\" [src]='content_cover' alt=\"\">\r\n        </div>\r\n\r\n        <div class=\"song-info\">\r\n            <div class=\"info\">\r\n                <!--Song-Podcast name and artist-->\r\n                <p class=\"p1\">{{audioNames[currentSongIndex]}}</p>\r\n                <p class=\"p2\">{{artist}}</p>\r\n            </div>\r\n    \r\n            <!--Favorite button-->\r\n            <button id=\"favoriteBtn\" class=\"btn btn-outline-danger\"><i id=\"heartIcon\" class=\"fas fa-heart\"></i></button>\r\n        </div>\r\n\r\n        <!--Audio of the song or podcast-->\r\n        <audio #audioPlayer>\r\n            <source [src]=\"audios[currentSongIndex]\" type=\"audio/mpeg\">\r\n            Tu navegador no soporta el elemento de audio.\r\n        </audio>\r\n\r\n        <!--Player controls-->\r\n        <div class=\"controls mt-3 player-button\">\r\n            <!--Previous song button-->\r\n            <button (click)=\"play_previous_song()\" class=\"btn btn-primary skip-btn\">\r\n                <i class=\"fas fa-backward\"></i>\r\n            </button>\r\n            <!--Play/pause button-->\r\n            <button (click)=\"play_pause_song()\" class=\"btn btn-primary play-pause-btn\">\r\n                <i class=\"fas\" [ngClass]=\"getPlayButtonIcon()\"></i>\r\n            </button>\r\n            <!--Next song button-->\r\n            <button (click)=\"play_next_song()\" class=\"btn btn-primary skip-btn\">\r\n                <i class=\"fas fa-forward\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <!--Progress bar-->\r\n        <div class=\"progress-style\">\r\n            <div class=\"time-left\">{{ currentTime }}</div>\r\n            <input id=\"progressBar\" type=\"range\" class=\"form-range\" min=\"0\" max=\"100\" [value]=\"progressValue\"\r\n                (input)=\"handleProgressBar($event)\">\r\n            <div class=\"time-right\">{{ duration }}</div>\r\n        </div>\r\n    </div>\r\n</body>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}