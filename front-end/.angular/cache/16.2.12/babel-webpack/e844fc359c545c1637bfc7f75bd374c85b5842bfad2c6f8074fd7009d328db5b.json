{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class ValidIdGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const id = route.paramMap.get('id');\n    if (id === 'Crear' || id === 'Editar') {\n      return true;\n    } else {\n      this.router.navigate(['']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function ValidIdGuard_Factory(t) {\n    return new (t || ValidIdGuard)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidIdGuard,\n    factory: ValidIdGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ValidIdGuard","constructor","router","canActivate","route","state","id","paramMap","get","navigate","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\edit-podcast\\Valid-ID-Guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidIdGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const id = route.paramMap.get('id');\r\n    if (id === 'Crear' || id === 'Editar') {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['']); \r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,EAAE,GAAGF,KAAK,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACnC,IAAIF,EAAE,KAAK,OAAO,IAAIA,EAAE,KAAK,QAAQ,EAAE;MACrC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAXUV,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZf,YAAY;IAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}