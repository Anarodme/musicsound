{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/player-control/media.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"audioPlayer\"];\nfunction PlayerControlsComponent_div_3_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.formatTime(_r0.nativeElement.duration), \" \");\n  }\n}\nfunction PlayerControlsComponent_div_3_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"0:00\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PlayerControlsComponent_div_3_h3_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.selectedSong == null ? null : ctx_r5.selectedSong.songTitle, \" - \", ctx_r5.selectedSong == null ? null : ctx_r5.selectedSong.album == null ? null : ctx_r5.selectedSong.album.artist == null ? null : ctx_r5.selectedSong.album.artist.artistName, \" \");\n  }\n}\nfunction PlayerControlsComponent_div_3_h3_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r6.selectedSong == null ? null : ctx_r6.selectedSong.title, \" - \", ctx_r6.selectedSong == null ? null : ctx_r6.selectedSong.artist == null ? null : ctx_r6.selectedSong.artist.artistName, \" \");\n  }\n}\nfunction PlayerControlsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"div\");\n    i0.ɵɵelement(4, \"img\", 6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"div\", 8)(7, \"div\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 10);\n    i0.ɵɵlistener(\"input\", function PlayerControlsComponent_div_3_Template_input_input_9_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.handleProgressBar($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 11);\n    i0.ɵɵtemplate(11, PlayerControlsComponent_div_3_p_11_Template, 2, 1, \"p\", 12);\n    i0.ɵɵtemplate(12, PlayerControlsComponent_div_3_ng_template_12_Template, 2, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 14);\n    i0.ɵɵtemplate(15, PlayerControlsComponent_div_3_h3_15_Template, 2, 2, \"h3\", 15);\n    i0.ɵɵtemplate(16, PlayerControlsComponent_div_3_h3_16_Template, 2, 2, \"h3\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 16)(18, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function PlayerControlsComponent_div_3_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.play_previous_song());\n    });\n    i0.ɵɵelement(19, \"i\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function PlayerControlsComponent_div_3_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.togglePlayPause());\n    });\n    i0.ɵɵelement(21, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function PlayerControlsComponent_div_3_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.play_next_song());\n    });\n    i0.ɵɵelement(23, \"i\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(13);\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", (ctx_r1.selectedSong == null ? null : ctx_r1.selectedSong.album == null ? null : ctx_r1.selectedSong.album.coverImage) || (ctx_r1.selectedSong == null ? null : ctx_r1.selectedSong.artist == null ? null : ctx_r1.selectedSong.artist.coverImage), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.formatTime((_r0 == null ? null : _r0.nativeElement == null ? null : _r0.nativeElement.currentTime) ? _r0.nativeElement.currentTime : 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", (_r0 == null ? null : _r0.nativeElement == null ? null : _r0.nativeElement.currentTime) / (_r0 == null ? null : _r0.nativeElement == null ? null : _r0.nativeElement.duration) * 100 || 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r0 == null ? null : _r0.nativeElement == null ? null : _r0.nativeElement.duration)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedSong == null ? null : ctx_r1.selectedSong.album == null ? null : ctx_r1.selectedSong.album.artist == null ? null : ctx_r1.selectedSong.album.artist.artistName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.selectedSong == null ? null : ctx_r1.selectedSong.album == null ? null : ctx_r1.selectedSong.album.artist == null ? null : ctx_r1.selectedSong.album.artist.artistName) && (ctx_r1.selectedSong == null ? null : ctx_r1.selectedSong.artist == null ? null : ctx_r1.selectedSong.artist.artistName));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.playIcon);\n  }\n}\nexport class PlayerControlsComponent {\n  set selectedSong(song) {\n    if (song) {\n      this._selectedSong = song;\n      this.loadSong(song);\n    }\n  }\n  constructor(mediaService) {\n    this.mediaService = mediaService;\n    this.songs = [];\n    this.playIcon = 'fa-play';\n    this.audioContext = null;\n    this.isPlaying = false;\n  }\n  ngOnInit() {\n    this.setupAudioEvents();\n    this.audioContext = new AudioContext();\n    this.currentSongSubscription = this.mediaService.currentSong$.subscribe(song => {\n      this.selectedSong = song;\n    });\n    this.mediaService.currentAlbum$.subscribe(album => {\n      if (album) {\n        this.songs = album.songs;\n        this.resetPlayer();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.pause();\n    this.audioPlayer.nativeElement.removeEventListener('ended', this.handleEnded.bind(this));\n    this.audioPlayer.nativeElement.removeEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    clearInterval(this.progressInterval);\n    this.currentSongSubscription.unsubscribe();\n  }\n  setupAudioEvents() {\n    this.audioPlayer.nativeElement.addEventListener('ended', this.handleEnded.bind(this));\n    this.audioPlayer.nativeElement.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n  }\n  handleEnded() {\n    this.playNextSong();\n  }\n  loadSong(song) {\n    if (song) {\n      this.resetPlayer();\n      this._selectedSong = song;\n      this.setAudioSource(song.audio);\n      this.printNextAndPreviousSongs();\n    }\n  }\n  play() {\n    if (this.audioPlayer && this.audioPlayer.nativeElement && this._selectedSong) {\n      this.audioPlayer.nativeElement.play().then(() => {\n        console.log('Reproduciendo...');\n        this.playIcon = 'fa-pause';\n        this.isPlaying = true;\n        this.startProgressInterval();\n      }).catch(error => {\n        console.error('Error al reproducir el audio:', error);\n      });\n    }\n  }\n  pause() {\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      this.audioPlayer.nativeElement.pause();\n      console.log('Pausado...');\n      this.playIcon = 'fa-play';\n      this.isPlaying = false;\n      clearInterval(this.progressInterval);\n    }\n  }\n  togglePlayPause() {\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      if (this.audioPlayer.nativeElement.paused) {\n        this.play();\n      } else {\n        this.pause();\n      }\n    }\n  }\n  selectAlbum(album) {\n    this.mediaService.setCurrentAlbum(album);\n  }\n  printNextAndPreviousSongs() {\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\n      const currentIndex = this.songs.findIndex(song => song.id === this._selectedSong.id);\n      const previousIndex = (currentIndex - 1 + this.songs.length) % this.songs.length;\n      const nextIndex = (currentIndex + 1) % this.songs.length;\n      const previousSong = this.songs[previousIndex];\n      const nextSong = this.songs[nextIndex];\n      console.log('Canción actual:', this._selectedSong);\n      console.log('Canción anterior:', previousSong);\n      console.log('Siguiente canción:', nextSong);\n    }\n  }\n  playNextSong() {\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\n      const currentIndex = this.songs.findIndex(song => song.id === this._selectedSong.id);\n      const nextIndex = (currentIndex + 1) % this.songs.length;\n      const nextSong = this.songs[nextIndex];\n      if (nextSong) {\n        this.selectedSong = nextSong;\n      }\n    }\n  }\n  playPreviousSong() {\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\n      const currentIndex = this.songs.findIndex(song => song.id === this._selectedSong.id);\n      const previousIndex = (currentIndex - 1 + this.songs.length) % this.songs.length;\n      const previousSong = this.songs[previousIndex];\n      if (previousSong) {\n        this.selectedSong = previousSong;\n      }\n    }\n  }\n  handleTimeUpdate(event) {\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      const progress = this.audioPlayer.nativeElement.currentTime / this.audioPlayer.nativeElement.duration * 100;\n      const progressBar = document.getElementById('progressBar');\n      if (progressBar) {\n        progressBar.value = progress.toString();\n      }\n    }\n  }\n  handleProgressBar(event) {\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      const progress = event.target.value;\n      const duration = this.audioPlayer.nativeElement.duration;\n      if (!isNaN(duration) && isFinite(duration)) {\n        const newTime = duration * progress / 100;\n        if (!isNaN(newTime) && isFinite(newTime)) {\n          this.audioPlayer.nativeElement.currentTime = newTime;\n        }\n      }\n    }\n  }\n  formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  }\n  startProgressInterval() {\n    clearInterval(this.progressInterval);\n    this.progressInterval = setInterval(() => {\n      if (this.audioPlayer && this.audioPlayer.nativeElement) {\n        const progress = this.audioPlayer.nativeElement.currentTime / this.audioPlayer.nativeElement.duration * 100;\n        const progressBar = document.getElementById('progressBar');\n        if (progressBar) {\n          progressBar.value = progress.toString();\n        }\n      }\n    }, 1000);\n  }\n  setAudioSource(audioUrl) {\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      this.audioPlayer.nativeElement.src = audioUrl;\n      this.audioPlayer.nativeElement.load();\n    }\n  }\n  resetPlayer() {\n    this.pause();\n    this._selectedSong = null;\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\n      this.audioPlayer.nativeElement.src = '';\n    }\n    this.playIcon = 'fa-play';\n    this.isPlaying = false;\n    clearInterval(this.progressInterval);\n  }\n  static #_ = this.ɵfac = function PlayerControlsComponent_Factory(t) {\n    return new (t || PlayerControlsComponent)(i0.ɵɵdirectiveInject(i1.MediaService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlayerControlsComponent,\n    selectors: [[\"app-player-controls\"]],\n    viewQuery: function PlayerControlsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.audioPlayer = _t.first);\n      }\n    },\n    inputs: {\n      selectedSong: \"selectedSong\",\n      songs: \"songs\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[3, \"timeupdate\"], [\"audioPlayer\", \"\"], [\"class\", \"container1\", 4, \"ngIf\"], [1, \"container1\"], [1, \"media-container\"], [1, \"mediaDetails\"], [\"alt\", \"Media Cover\", 1, \"cover-image\", 3, \"src\"], [1, \"progress-container\"], [1, \"progress-style\"], [1, \"time-left\"], [\"id\", \"progressBar\", \"type\", \"range\", \"min\", \"0\", \"max\", \"100\", 1, \"form-range\", 3, \"value\", \"input\"], [1, \"time-right\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [1, \"song-info\"], [\"class\", \"title\", 4, \"ngIf\"], [1, \"controls\", \"mt-3\", \"player-button\"], [1, \"btn\", \"btn-primary\", \"skip-btn\", 3, \"click\"], [1, \"fas\", \"fa-backward\"], [1, \"btn\", \"btn-primary\", \"play-pause-btn\", 3, \"click\"], [1, \"fas\", 3, \"ngClass\"], [1, \"fas\", \"fa-forward\"], [1, \"title\"]],\n    template: function PlayerControlsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"audio\", 0, 1);\n        i0.ɵɵlistener(\"timeupdate\", function PlayerControlsComponent_Template_audio_timeupdate_0_listener($event) {\n          return ctx.handleTimeUpdate($event);\n        });\n        i0.ɵɵtext(2, \" Tu navegador no soporta el elemento de audio.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, PlayerControlsComponent_div_3_Template, 24, 8, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedSong);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf],\n    styles: [\".container1[_ngcontent-%COMP%] {\\n    background-color: black;\\n    width: auto;\\n    height: 400px;\\n    width: 100%;\\n    font-family: 'Poppins', sans-serif;\\n    color: white;\\n    display: flex;\\n    flex-direction: column;\\n    padding-left: 50px;\\n    padding-right: 50px;\\n}\\n\\n.media-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start; \\n    margin-bottom: 20px;\\n    padding-top: 10px;\\n}\\n\\n.mediaDetails[_ngcontent-%COMP%] {\\n    padding: 5px;\\n    border-radius: 10px;\\n}\\n\\n.cover-image[_ngcontent-%COMP%]{\\n    height: 150px;\\n    width: 150px;\\n    align-content: first baseline;\\n}\\n\\n.progress-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.progress-style[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.time-left[_ngcontent-%COMP%], .time-right[_ngcontent-%COMP%] {\\n    font-size: 15px;\\n    text-align: left;\\n}\\n\\n.song-info[_ngcontent-%COMP%] {\\n    text-align: left; \\n    padding-top: 5px;\\n    font-family: 'Poppins', sans-serif;\\n}\\n\\n\\n.controls[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center; \\n}\\n\\n\\n.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin: 0 10px;\\n    font-size: 25px;\\n}\\n\\n.btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n}\\n\\n.btn[_ngcontent-%COMP%]:focus {\\n    outline: none;\\n}\\n\\n.play-pause-btn[_ngcontent-%COMP%] {\\n    color: white;\\n    border-radius: 30px;\\n    background-color: blue;\\n    border: none;\\n    margin-right: 20px;\\n    height: 50px;\\n    width: 50px;\\n}\\n\\n.play-pause-btn[_ngcontent-%COMP%]:hover, .play-pause-btn[_ngcontent-%COMP%]:focus, .play-pause-btn[_ngcontent-%COMP%]:active {\\n    background-color: blue;\\n}\\n\\n.skip-btn[_ngcontent-%COMP%] {\\n    color: white;\\n    background-color: transparent;\\n    border: none;\\n    margin-right: 20px;\\n}\\n\\n.skip-btn[_ngcontent-%COMP%]:hover, .skip-btn[_ngcontent-%COMP%]:focus, .skip-btn[_ngcontent-%COMP%]:active {\\n    background-color: transparent;\\n    border: 1px solid white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9wbGF5ZXItY29udHJvbHMvcGxheWVyLWNvbnRyb2xzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7SUFDdkIsV0FBVztJQUNYLGFBQWE7SUFDYixXQUFXO0lBQ1gsa0NBQWtDO0lBQ2xDLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixrQ0FBa0M7QUFDdEM7OztBQUdBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtBQUMzQjs7O0FBR0E7SUFDSSxjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBOzs7SUFHSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7OztJQUdJLDZCQUE2QjtJQUM3Qix1QkFBdUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyMSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiA0MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogNTBweDtcclxufVxyXG5cclxuLm1lZGlhLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyBcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG5cclxuLm1lZGlhRGV0YWlscyB7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uY292ZXItaW1hZ2V7XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgYWxpZ24tY29udGVudDogZmlyc3QgYmFzZWxpbmU7XHJcbn1cclxuXHJcbi5wcm9ncmVzcy1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5wcm9ncmVzcy1zdHlsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnRpbWUtbGVmdCxcclxuLnRpbWUtcmlnaHQge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuLnNvbmctaW5mbyB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyBcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5cclxuLmNvbnRyb2xzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbn1cclxuXHJcblxyXG4uY29udHJvbHMgYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMCAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG59XHJcblxyXG4uYnRuIGkge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uYnRuOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5wbGF5LXBhdXNlLWJ0biB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG59XHJcblxyXG4ucGxheS1wYXVzZS1idG46aG92ZXIsXHJcbi5wbGF5LXBhdXNlLWJ0bjpmb2N1cyxcclxuLnBsYXktcGF1c2UtYnRuOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG59XHJcblxyXG4uc2tpcC1idG4ge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5za2lwLWJ0bjpob3ZlcixcclxuLnNraXAtYnRuOmZvY3VzLFxyXG4uc2tpcC1idG46YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","formatTime","_r0","nativeElement","duration","ɵɵtextInterpolate2","ctx_r5","selectedSong","songTitle","album","artist","artistName","ctx_r6","title","ɵɵelement","ɵɵlistener","PlayerControlsComponent_div_3_Template_input_input_9_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","handleProgressBar","ɵɵtemplate","PlayerControlsComponent_div_3_p_11_Template","PlayerControlsComponent_div_3_ng_template_12_Template","ɵɵtemplateRefExtractor","PlayerControlsComponent_div_3_h3_15_Template","PlayerControlsComponent_div_3_h3_16_Template","PlayerControlsComponent_div_3_Template_button_click_18_listener","ctx_r9","play_previous_song","PlayerControlsComponent_div_3_Template_button_click_20_listener","ctx_r10","togglePlayPause","PlayerControlsComponent_div_3_Template_button_click_22_listener","ctx_r11","play_next_song","ɵɵproperty","ctx_r1","coverImage","ɵɵsanitizeUrl","ɵɵtextInterpolate","currentTime","_r3","playIcon","PlayerControlsComponent","song","_selectedSong","loadSong","constructor","mediaService","songs","audioContext","isPlaying","ngOnInit","setupAudioEvents","AudioContext","currentSongSubscription","currentSong$","subscribe","currentAlbum$","resetPlayer","ngOnDestroy","pause","audioPlayer","removeEventListener","handleEnded","bind","handleTimeUpdate","clearInterval","progressInterval","unsubscribe","addEventListener","playNextSong","setAudioSource","audio","printNextAndPreviousSongs","play","then","console","log","startProgressInterval","catch","error","paused","selectAlbum","setCurrentAlbum","length","currentIndex","findIndex","id","previousIndex","nextIndex","previousSong","nextSong","playPreviousSong","event","progress","progressBar","document","getElementById","value","toString","target","isNaN","isFinite","newTime","seconds","minutes","Math","floor","remainingSeconds","setInterval","audioUrl","src","load","_","ɵɵdirectiveInject","i1","MediaService","_2","selectors","viewQuery","PlayerControlsComponent_Query","rf","ctx","PlayerControlsComponent_Template_audio_timeupdate_0_listener","PlayerControlsComponent_div_3_Template"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\player-controls\\player-controls.component.ts","C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Components\\player-controls\\player-controls.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n} from '@angular/core';\r\nimport { MediaService } from 'src/app/Services/player-control/media.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-player-controls',\r\n  templateUrl: './player-controls.component.html',\r\n  styleUrls: ['./player-controls.component.css'],\r\n})\r\nexport class PlayerControlsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('audioPlayer', { static: true })\r\n  audioPlayer!: ElementRef<HTMLAudioElement>;\r\n\r\n  @Input() set selectedSong(song: any) {\r\n    if (song) {\r\n      this._selectedSong = song;\r\n      this.loadSong(song);\r\n    }\r\n  }\r\n  @Input() songs: any[] = [];\r\n\r\n  private _selectedSong: any;\r\n  private currentSongSubscription: Subscription;\r\n  playIcon: string = 'fa-play';\r\n  audioContext: AudioContext | null = null;\r\n  isPlaying: boolean = false;\r\n  progressInterval: any;\r\n\r\n  constructor(private mediaService: MediaService) {}\r\n\r\n  ngOnInit() {\r\n    this.setupAudioEvents();\r\n    this.audioContext = new AudioContext();\r\n\r\n    this.currentSongSubscription = this.mediaService.currentSong$.subscribe(\r\n      (song) => {\r\n        this.selectedSong = song;\r\n      }\r\n    );\r\n\r\n    this.mediaService.currentAlbum$.subscribe((album) => {\r\n      if (album) {\r\n        this.songs = album.songs;\r\n        this.resetPlayer();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pause();\r\n    this.audioPlayer.nativeElement.removeEventListener(\r\n      'ended',\r\n      this.handleEnded.bind(this)\r\n    );\r\n    this.audioPlayer.nativeElement.removeEventListener(\r\n      'timeupdate',\r\n      this.handleTimeUpdate.bind(this)\r\n    );\r\n    clearInterval(this.progressInterval);\r\n    this.currentSongSubscription.unsubscribe();\r\n  }\r\n\r\n  setupAudioEvents() {\r\n    this.audioPlayer.nativeElement.addEventListener(\r\n      'ended',\r\n      this.handleEnded.bind(this)\r\n    );\r\n    this.audioPlayer.nativeElement.addEventListener(\r\n      'timeupdate',\r\n      this.handleTimeUpdate.bind(this)\r\n    );\r\n  }\r\n\r\n  handleEnded() {\r\n    this.playNextSong();\r\n  }\r\n\r\n  loadSong(song: any) {\r\n    if (song) {\r\n      this.resetPlayer();\r\n      this._selectedSong = song;\r\n      this.setAudioSource(song.audio);\r\n      this.printNextAndPreviousSongs();\r\n    }\r\n  }\r\n\r\n  play() {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement && this._selectedSong) {\r\n      this.audioPlayer.nativeElement.play().then(() => {\r\n        console.log('Reproduciendo...');\r\n        this.playIcon = 'fa-pause';\r\n        this.isPlaying = true;\r\n        this.startProgressInterval();\r\n      }).catch(error => {\r\n        console.error('Error al reproducir el audio:', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      this.audioPlayer.nativeElement.pause();\r\n      console.log('Pausado...');\r\n      this.playIcon = 'fa-play';\r\n      this.isPlaying = false;\r\n      clearInterval(this.progressInterval);\r\n    }\r\n  }\r\n\r\n  togglePlayPause() {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      if (this.audioPlayer.nativeElement.paused) {\r\n        this.play();\r\n      } else {\r\n        this.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  selectAlbum(album: any) {\r\n    this.mediaService.setCurrentAlbum(album);\r\n  }\r\n\r\n  printNextAndPreviousSongs() {\r\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\r\n      const currentIndex = this.songs.findIndex(\r\n        (song) => song.id === this._selectedSong.id\r\n      );\r\n\r\n      const previousIndex =\r\n        (currentIndex - 1 + this.songs.length) % this.songs.length;\r\n      const nextIndex = (currentIndex + 1) % this.songs.length;\r\n\r\n      const previousSong = this.songs[previousIndex];\r\n      const nextSong = this.songs[nextIndex];\r\n\r\n      console.log('Canción actual:', this._selectedSong);\r\n      console.log('Canción anterior:', previousSong);\r\n      console.log('Siguiente canción:', nextSong);\r\n    }\r\n  }\r\n\r\n  playNextSong() {\r\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\r\n      const currentIndex = this.songs.findIndex(\r\n        (song) => song.id === this._selectedSong.id\r\n      );\r\n      const nextIndex = (currentIndex + 1) % this.songs.length;\r\n      const nextSong = this.songs[nextIndex];\r\n      if (nextSong) {\r\n        this.selectedSong = nextSong;\r\n      }\r\n    }\r\n  }\r\n\r\n  playPreviousSong() {\r\n    if (this.songs && this.songs.length > 0 && this._selectedSong) {\r\n      const currentIndex = this.songs.findIndex(\r\n        (song) => song.id === this._selectedSong.id\r\n      );\r\n      const previousIndex =\r\n        (currentIndex - 1 + this.songs.length) % this.songs.length;\r\n      const previousSong = this.songs[previousIndex];\r\n      if (previousSong) {\r\n        this.selectedSong = previousSong;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTimeUpdate(event: any) {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      const progress =\r\n        (this.audioPlayer.nativeElement.currentTime /\r\n          this.audioPlayer.nativeElement.duration) *\r\n        100;\r\n      const progressBar = document.getElementById(\r\n        'progressBar'\r\n      ) as HTMLInputElement;\r\n      if (progressBar) {\r\n        progressBar.value = progress.toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleProgressBar(event: any) {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      const progress = event.target.value;\r\n      const duration = this.audioPlayer.nativeElement.duration;\r\n\r\n      if (!isNaN(duration) && isFinite(duration)) {\r\n        const newTime = (duration * progress) / 100;\r\n        if (!isNaN(newTime) && isFinite(newTime)) {\r\n          this.audioPlayer.nativeElement.currentTime = newTime;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  formatTime(seconds: number): string {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.floor(seconds % 60);\r\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n  }\r\n\r\n  startProgressInterval() {\r\n    clearInterval(this.progressInterval);\r\n    this.progressInterval = setInterval(() => {\r\n      if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n        const progress =\r\n          (this.audioPlayer.nativeElement.currentTime /\r\n            this.audioPlayer.nativeElement.duration) *\r\n          100;\r\n        const progressBar = document.getElementById(\r\n          'progressBar'\r\n        ) as HTMLInputElement;\r\n        if (progressBar) {\r\n          progressBar.value = progress.toString();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  setAudioSource(audioUrl: string) {\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      this.audioPlayer.nativeElement.src = audioUrl;\r\n      this.audioPlayer.nativeElement.load();\r\n    }\r\n  }\r\n  \r\n  resetPlayer() {\r\n    this.pause();\r\n    this._selectedSong = null;\r\n    if (this.audioPlayer && this.audioPlayer.nativeElement) {\r\n      this.audioPlayer.nativeElement.src = '';\r\n    }\r\n    this.playIcon = 'fa-play';\r\n    this.isPlaying = false;\r\n    clearInterval(this.progressInterval);\r\n  }\r\n  }","<!-- Audio player element -->\r\n<audio #audioPlayer (timeupdate)=\"handleTimeUpdate($event)\">\r\n    Tu navegador no soporta el elemento de audio.\r\n</audio>\r\n\r\n\r\n<div class=\"container1\" *ngIf=\"selectedSong\">\r\n    <div class=\"media-container\">\r\n        <div class=\"mediaDetails\">\r\n            <div>\r\n                <!-- Placeholder for media cover image -->\r\n                <img [src]=\"selectedSong?.album?.coverImage || selectedSong?.artist?.coverImage\" alt=\"Media Cover\"\r\n                    class=\"cover-image\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"progress-container\">\r\n        <div class=\"progress-style\">\r\n            <div class=\"time-left\">{{ formatTime(audioPlayer?.nativeElement?.currentTime ?\r\n                audioPlayer.nativeElement.currentTime : 0) }}</div>\r\n\r\n            <input id=\"progressBar\" type=\"range\" class=\"form-range\" min=\"0\" max=\"100\"\r\n                [value]=\"(audioPlayer?.nativeElement?.currentTime / audioPlayer?.nativeElement?.duration * 100) || 0\"\r\n                (input)=\"handleProgressBar($event)\">\r\n\r\n            <div class=\"time-right\">\r\n                <p *ngIf=\"audioPlayer?.nativeElement?.duration; else elseBlock\">\r\n                    {{ formatTime(audioPlayer.nativeElement.duration) }}\r\n                </p>\r\n                <ng-template #elseBlock>\r\n                    <p>0:00</p>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- Song information -->\r\n    <div class=\"song-info\">\r\n        <!-- Song information  albums -->\r\n        <h3 class=\"title\" *ngIf=\"selectedSong?.album?.artist?.artistName\">\r\n            {{ selectedSong?.songTitle }} - {{ selectedSong?.album?.artist?.artistName }}\r\n        </h3>\r\n        <!-- Song information  playlists -->\r\n        <h3 class=\"title\" *ngIf=\"!selectedSong?.album?.artist?.artistName && selectedSong?.artist?.artistName\">\r\n            {{ selectedSong?.title }} - {{ selectedSong?.artist?.artistName }}\r\n        </h3>\r\n    </div>\r\n\r\n\r\n    <!-- Player controls -->\r\n    <div class=\"controls mt-3 player-button\">\r\n        <button (click)=\"play_previous_song()\" class=\"btn btn-primary skip-btn\">\r\n            <i class=\"fas fa-backward\"></i>\r\n        </button>\r\n        <button (click)=\"togglePlayPause()\" class=\"btn btn-primary play-pause-btn\">\r\n            <i class=\"fas\" [ngClass]=\"playIcon\"></i>\r\n        </button>\r\n        <button (click)=\"play_next_song()\" class=\"btn btn-primary skip-btn\">\r\n            <i class=\"fas fa-forward\"></i>\r\n        </button>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}