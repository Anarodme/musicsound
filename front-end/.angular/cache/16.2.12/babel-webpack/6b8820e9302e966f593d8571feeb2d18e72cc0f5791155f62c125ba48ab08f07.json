{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MediaService {\n  constructor() {\n    this.currentSongSource = new BehaviorSubject(null);\n    this.currentSong$ = this.currentSongSource.asObservable();\n  }\n  setCurrentSong(song) {\n    this.currentSongSource.next(song);\n  }\n  static #_ = this.ɵfac = function MediaService_Factory(t) {\n    return new (t || MediaService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MediaService,\n    factory: MediaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","MediaService","constructor","currentSongSource","currentSong$","asObservable","setCurrentSong","song","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Comercio\\version12\\musicsound\\front-end\\src\\app\\Services\\player-control\\media.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaService {\r\n  private currentSongSource = new BehaviorSubject<any>(null);\r\n  currentSong$ = this.currentSongSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setCurrentSong(song: any) {\r\n    this.currentSongSource.next(song);\r\n  }\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IAC1D,KAAAI,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAErC;EAEfC,cAAcA,CAACC,IAAS;IACtB,IAAI,CAACJ,iBAAiB,CAACK,IAAI,CAACD,IAAI,CAAC;EACnC;EAAC,QAAAE,CAAA,G;qBARUR,YAAY;EAAA;EAAA,QAAAS,EAAA,G;WAAZT,YAAY;IAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}